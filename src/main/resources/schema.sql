drop table IF EXISTS users CASCADE;
drop table IF EXISTS friendship CASCADE;
drop table IF EXISTS genres CASCADE;
drop table IF EXISTS mpa_rating CASCADE;
drop table IF EXISTS films CASCADE;
drop table IF EXISTS film_genre CASCADE;
drop table IF EXISTS likes CASCADE;

create TABLE IF NOT EXISTS users (
user_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL,
email VARCHAR(50) NOT NULL,
login VARCHAR(50) NOT NULL,
birthday DATE

);

create TABLE IF NOT EXISTS friendship (
user_id INTEGER REFERENCES users(user_id) ON delete CASCADE,
friend_id INTEGER REFERENCES users(user_id) on delete cascade,
status boolean
);

create TABLE IF NOT EXISTS genres (
genre_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY key,
name VARCHAR(50) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS mpa_rating (
rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY key,
name VARCHAR(20) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS films (
film_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100) NOT NULL,
description VARCHAR(200) NOT NULL,
release_date DATE NOT NULL,
duration INTEGER NOT NULL,
rating_id INTEGER NOT NULL REFERENCES mpa_rating(rating_id) ON update CASCADE
);

create TABLE IF NOT EXISTS film_genre(
film_id INTEGER REFERENCES films(film_id) ON delete CASCADE,
genre_id INTEGER REFERENCES genres(genre_id) ON delete CASCADE
);

create TABLE IF NOT EXISTS likes(
user_id INTEGER REFERENCES users(user_id) ON delete CASCADE,
film_id INTEGER REFERENCES films(film_id)
);


